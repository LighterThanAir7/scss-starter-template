@use "sass:math";
@use "sass:map";
@use "typography" as *;
@use "colors" as *;
@use "functions" as *;
@use "letter-spacings" as *;

:root {
    --ff-primary: var(--custom-ff-primary, #{$ff-primary});
    --ff-secondary: var(--custom-ff-secondary, #{$ff-secondary});
    --base-font-size: #{$base-font-size};

    // Colors
    @each $category, $submap in $colors {
        @if $category == 'primary' or $category == 'secondary' or /* $category == 'tertiary' or */ $category == 'neutral' {
            @each $key, $value in $submap {
                --clr-#{$category}-#{$key + ""}: var(--custom-clr-#{$category}-#{$key}, #{$value});
            }
        }
        @else if $category == 'status' {
            @each $key, $value in $submap {
                --clr-#{$key + ""}: var(--custom-clr-#{$key + ""}, #{$value});
            }
        }
            // User will not be able to change the neutral or generic colors with custom colors'
        @else if $category == 'generic' {
            @each $key, $value in $submap {
                --clr-#{$key + ""}: #{$value};
            }
        }
    }

    // Font sizes
    @each $font-size, $value in $font-sizes {
        --fs-#{$font-size + ""}: #{$value};
    }

    @each $scaling-factor, $value in $scaling-factors {
        --scale-#{$scaling-factor + ""}: #{$value};
    }

    // Line heights
    @each $line-heights, $value in $line-heights {
        --lh-#{$line-heights + ""}: #{$value};
    }

    // Font-weights
    @each $font-weight, $value in $font-weights {
        --fw-#{$font-weight + ""}: #{$value};
    }

    // Letter spacing
    @each $letter-spacing, $value in $letter-spacings {
        --ls-#{$letter-spacing + ""}: #{$value};
    }

    // >-------------------------------> Displays Typography <----------------------------------<
    // Default values for displays (d1 through d6)
    // Map display numbers to font size map keys, and other typography properties
    $display-defaults: (
        1: (ff: 'primary', fs: 900, sf: 9, lh: 900, fw: 800, ls: "normal", tt: "uppercase"),
        2: (ff: 'primary', fs: 850, sf: 9, lh: 850, fw: 800, ls: "normal", tt: "none"),
        3: (ff: 'primary', fs: 800, sf: 9, lh: 800, fw: 800, ls: "normal", tt: "none"),
        4: (ff: 'primary', fs: 700, sf: 9, lh: 700, fw: 700, ls: "normal", tt: "none"),
        5: (ff: 'primary', fs: 650, sf: 13, lh: 650, fw: 700, ls: "normal", tt: "none"),
        6: (ff: 'primary', fs: 550, sf: 13, lh: 550, fw: 700, ls: "normal", tt: "none")
    );

    @each $key, $values in $display-defaults {
        $ff-key: map.get($values, ff);
        $fs-key: map.get($values, fs);
        $sf-key: map.get($values, sf);
        $lh-key: map.get($values, lh);
        $fw-key: map.get($values, fw);
        $ls-key: map.get($values, ls);
        $tt-key: map.get($values, tt);

        // Font family
        --d#{$key}-ff: var(--custom-d#{$key}-ff, var(--ff-#{$ff-key}));

        // Font size
        --d#{$key}-fs: var(--custom-d#{$key}-fs, var(--fs-#{$fs-key}));

        // Scale Factor
        --d#{$key}-sf: var(--custom-d#{$key}-sf, var(--scale-#{$sf-key}));

        // Line height
        --d#{$key}-lh: var(--custom-d#{$key}-lh, var(--lh-#{$lh-key}));

        // Font weight
        --d#{$key}-fw: var(--custom-d#{$key}-fw, var(--fw-#{$fw-key}));

        // Letter spacing
        --d#{$key}-ls: var(--custom-d#{$key}-ls, var(--ls-#{$ls-key}));

        // Text transform
        --d#{$key}-tt: var(--custom-d#{$key}-tt, #{$tt-key});
    }

    // >-------------------------------> Headings Typography <----------------------------------<
    // Default values for headings (h1 through h6)
    // Map heading numbers to font size map keys
    $heading-defaults: (
        1: (ff: 'primary', fs: 700, sf: 8, lh: 750, fw: 800, ls: "normal", tt: "none"),
        2: (ff: 'primary', fs: 650, sf: 8, lh: 700, fw: 800, ls: "normal", tt: "none"),
        3: (ff: 'primary', fs: 600, sf: 8, lh: 650, fw: 700, ls: "normal", tt: "none"),
        4: (ff: 'primary', fs: 500, sf: 7, lh: 550, fw: 700, ls: "normal", tt: "none"),
        5: (ff: 'primary', fs: 450, sf: 7, lh: 450, fw: 700, ls: "normal", tt: "none"),
        6: (ff: 'primary', fs: 400, sf: 7, lh: 400, fw: 700, ls: "normal", tt: "none")
    );

    @each $key, $values in $heading-defaults {
        $ff-key: map.get($values, ff);
        $fs-key: map.get($values, fs);
        $sf-key: map.get($values, sf);
        $lh-key: map.get($values, lh);
        $fw-key: map.get($values, fw);
        $ls-key: map.get($values, ls);
        $tt-key: map.get($values, tt);

        // Font family
        --h#{$key}-ff: var(--custom-h#{$key}-ff, var(--ff-#{$ff-key}));

        // Font size
        --h#{$key}-fs: var(--custom-h#{$key}-fs, var(--fs-#{$fs-key}));

        // Scale Factor
        --h#{$key}-sf: var(--custom-h#{$key}-sf, var(--scale-#{$sf-key}));

        // Line height
        --h#{$key}-lh: var(--custom-h#{$key}-lh, var(--lh-#{$lh-key}));

        // Font weight
        --h#{$key}-fw: var(--custom-h#{$key}-fw, var(--fw-#{$fw-key}));

        // Letter spacing
        --h#{$key}-ls: var(--custom-h#{$key}-ls, var(--ls-#{$ls-key}));

        // Text transform
        --h#{$key}-tt: var(--custom-h#{$key}-tt, #{$tt-key});
    }
}