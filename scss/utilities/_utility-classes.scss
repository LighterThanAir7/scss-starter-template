@use "sass:math";
@use '../abstract/sizes' as*;
@use '../abstract/typography' as *;
@use '../abstract/breakpoints' as *;
@use "../abstract/colors" as *;
@use "../abstract/mixins" as *;
@use "../abstract/functions" as *;

// >--------------------------> Sizes (margins, paddings, gap) <-----------------------------<

// Utility klase bez breakpointova
@each $size-name, $size-value in $sizes {
    .m-#{$size-name}    { margin: $size-value !important; }
    .mb-#{$size-name}   { margin-bottom: $size-value !important; }
    .mt-#{$size-name}   { margin-top: $size-value !important; }
    .mr-#{$size-name}   { margin-right: $size-value !important; }
    .ml-#{$size-name}   { margin-left: $size-value !important; }
    .mx-#{$size-name}   { margin-inline: $size-value !important; }
    .my-#{$size-name}   { margin-block: $size-value !important; }
    .p-#{$size-name}    { padding: $size-value !important; }
    .pb-#{$size-name}   { padding-bottom: $size-value !important; }
    .pt-#{$size-name}   { padding-top: $size-value !important; }
    .pr-#{$size-name}   { padding-right: $size-value !important; }
    .pl-#{$size-name}   { padding-left: $size-value !important; }
    .px-#{$size-name}   { padding-inline: $size-value !important; }
    .py-#{$size-name}   { padding-block: $size-value !important; }
    .g-#{$size-name}    { gap: $size-value !important; }
}

// >-------------------------------------> Outlines <----------------------------------------<
.outline {
    outline: 1px solid;
}

.outline-2 {
    outline: 2px solid currentColor;
}

// >------------------------------------> Font sizes <---------------------------------------<

@each $key, $value in $font-sizes {
    .fs-#{$key} {
        font-size: #{math.div(strip-unit($value), strip-unit($base-font-size))}rem;
    }
}

// >------------------------------------> Font weights <---------------------------------------<

@each $key, $value in $font-weights {
    .fw-#{$key} {
        font-weight: $value;
    }
}

// >--------------------------------------> Colors <-----------------------------------------<

@each $color, $shades in $colors {
    // Posebna pravila za generic i status
    @if $color == "generic" or $color == "status" {
        @each $shade, $value in $shades {
            .clr-#{"" + $shade} {
                color: var(--clr-#{"" + $shade}) !important;
            }
            .bg-#{"" + $shade} {
                background-color: var(--clr-#{"" + $shade}) !important;
            }
        }
    }
        // Standardna pravila za ostale kategorije
    @else {
        @each $shade, $value in $shades {
            .clr-#{"" + $color}-#{"" + $shade} {
                color: var(--clr-#{"" + $color}-#{"" + $shade}) !important;
            }
            .bg-#{"" + $color}-#{"" + $shade} {
                background-color: var(--clr-#{"" + $color}-#{"" + $shade}) !important;
            }
        }
    }
}

// My Custom Classes

.z-1 {
    z-index: 1;
}

.hidden {
    display: none;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right !important;
}

.d-block {
    display: block !important;
}

// Flex

.flex {
    display: flex;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-col {
    @include flex($d: column);
}

@include mq(md) {
    .md\:flex-col {
        flex-direction: column;
    }
}

.flex-split {
    @include flex();

    & > * {
        flex: 1 1 0;
    }
}

.flex-1 {
    flex: 1;
}

.align-items-center {
    align-items: center;
}

.align-flex-start {
    align-items: flex-start !important;
}

.align-flex-end {
    align-items: flex-end;
}

.justify-content-between {
    justify-content: space-between;
}

.justify-content-center {
    justify-content: space-between;
}

.justify-content-end {
    justify-content: flex-end;
}

.ml-auto {
    margin-left: auto;
}

@include mq(md) {
    .md\:hidden {
        display: none;
    }
}

.relative {
    position: relative;
}

.absolute {
    position: absolute;
}

.z-1 {
    z-index: 1;
}

.z-2 {
    z-index: 2;
}

.text-italic {
    font-style: italic;
}

.sr-only {
    clip: rect(1px, 1px, 1px, 1px);
    height: 1px;
    overflow: hidden;
    position: absolute !important;
    width: 1px;
}

.text-center {
    text-align: center;
}

.uppercase {
    text-transform: uppercase;
}

// Custom Widths

.w-fit-content {
    width: fit-content;
}

.w-full {
    width: 100%;
}

.w-80 {
    width: 80%;
}

.w-60 {
    width: 60%;
}

.w-50 {
    width: 50%;
}

.w-40 {
    width: 40%;
}

.w-20 {
    width: 20%;
}

.m-w-100 {
    max-width: 100%;
}